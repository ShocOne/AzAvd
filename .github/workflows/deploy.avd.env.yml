# This is a basic workflow to help you get started with Actions

name: Deploy AVD Environment

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the beta branch
  push:
    branches: [ beta, '*' ]
  pull_request:
    branches: [ beta, '*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2.4.0
      with:
        # Repository name with owner. For example, actions/checkout
        repository: ''
        path: 'drop'
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        # Artifact name
        name: azModule
        path: drop
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.1.0
        with:
          name: azModule
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Importing Az.Avd module
        shell: pwsh
        run: |
          Import-Module ./Az.Avd/Az.Avd.psd1 -Force -ErrorAction Stop -Verbose
      - name: Connect to Azure
        shell: pwsh
        run: |
          Connect-Avd -ClientID ${{ secrets.CLIENT_ID }} -ClientSecret ${{ secrets.CLIENT_SECRET }} -SubscriptionID ${{ secrets.SUBSCRIPTION_ID }}
      - name: Deploy AVD Core
        shell: pwsh
        run: |
          $avdParams = Get-Content -Path ./Deploy/deploy.avd.core.json -Raw | ConvertFrom-Json -AsHashtable
          $hpParams = $avdParams.hostpool
          $appParams = $avdParams.appgroup
          $wsParams = $params.workspace
          $hp = new-avdhostpool @hpParams
          $app = New-AvdApplicationGroup @appParams -HostPoolArmPath $hp.id
          $ws = New-AvdWorkspace @wsParams -ApplicationGroupReference $app.id

